{"ast":null,"code":"var _jsxFileName = \"/Users/kuzmycz/Documents/Software/Research/react/crwn-clothing/client/src/components/collection-item/collection-item.component.jsx\";\nimport React from \"react\";\nimport { connect } from 'react-redux';\nimport { addItem } from '../../redux/cart/cart.actions';\nimport CustomButton from \"../custom-button/custom-button.component\";\nimport { CollectionItemContainer, Footer, NameContainer, PriceContainer } from './collection-item.styles';\n\nconst CollectionItem = ({\n  item,\n  addItem\n}) => {\n  const name = item.name,\n        price = item.price,\n        imageUrl = item.imageUrl;\n  return React.createElement(CollectionItemContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"image\",\n    style: {\n      backgroundImage: \"url(\".concat(imageUrl, \")\")\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }), React.createElement(Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(NameContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, name), React.createElement(PriceContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, price)), React.createElement(CustomButton, {\n    onClick: () => addItem(item),\n    inverted: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"Add to cart\"));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  addItem: item => dispatch(addItem(item))\n});\n\nexport default connect(null, mapDispatchToProps)(CollectionItem);","map":{"version":3,"sources":["/Users/kuzmycz/Documents/Software/Research/react/crwn-clothing/client/src/components/collection-item/collection-item.component.jsx"],"names":["React","connect","addItem","CustomButton","CollectionItemContainer","Footer","NameContainer","PriceContainer","CollectionItem","item","name","price","imageUrl","backgroundImage","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,QAAwB,+BAAxB;AAEA,OAAOC,YAAP,MAAyB,0CAAzB;AAEA,SAASC,uBAAT,EAAkCC,MAAlC,EAA0CC,aAA1C,EAAyDC,cAAzD,QAA+E,0BAA/E;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQP,EAAAA;AAAR,CAAD,KAAuB;AAAA,QAClCQ,IADkC,GACRD,IADQ,CAClCC,IADkC;AAAA,QAC5BC,KAD4B,GACRF,IADQ,CAC5BE,KAD4B;AAAA,QACrBC,QADqB,GACRH,IADQ,CACrBG,QADqB;AAG1C,SACA,oBAAC,uBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AACI,IAAA,SAAS,EAAC,OADd;AAEI,IAAA,KAAK,EAAE;AACHC,MAAAA,eAAe,gBAASD,QAAT;AADZ,KAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAOI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiBF,IAAjB,CADJ,EAEI,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkBC,KAAlB,CAFJ,CAPJ,EAWI,oBAAC,YAAD;AAAc,IAAA,OAAO,EAAE,MAAMT,OAAO,CAACO,IAAD,CAApC;AAA4C,IAAA,QAAQ,MAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAXJ,CADA;AAcF,CAjBF;;AAmBA,MAAMK,kBAAkB,GAAIC,QAAD,KAAe;AACtCb,EAAAA,OAAO,EAAGO,IAAD,IAAUM,QAAQ,CAACb,OAAO,CAACO,IAAD,CAAR;AADW,CAAf,CAA3B;;AAIA,eAAeR,OAAO,CAAC,IAAD,EAAOa,kBAAP,CAAP,CAAkCN,cAAlC,CAAf","sourcesContent":["import React from \"react\";\n\nimport { connect } from 'react-redux';\nimport { addItem } from '../../redux/cart/cart.actions';\n\nimport CustomButton from \"../custom-button/custom-button.component\";\n\nimport { CollectionItemContainer, Footer, NameContainer, PriceContainer } from './collection-item.styles';\n\nconst CollectionItem = ({ item, addItem }) => {\n    const { name, price, imageUrl } = item;\n\n    return (\n    <CollectionItemContainer>\n        <div \n            className='image'\n            style={{\n                backgroundImage: `url(${imageUrl})`\n            }}/>\n\n        <Footer>\n            <NameContainer>{ name }</NameContainer>\n            <PriceContainer>{ price }</PriceContainer>\n        </Footer>\n        <CustomButton onClick={() => addItem(item)} inverted >Add to cart</CustomButton>\n    </CollectionItemContainer>\n)};\n\nconst mapDispatchToProps = (dispatch) => ({\n    addItem: (item) => dispatch(addItem(item))\n})\n\nexport default connect(null, mapDispatchToProps)(CollectionItem);"]},"metadata":{},"sourceType":"module"}