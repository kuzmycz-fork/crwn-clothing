{"ast":null,"code":"import _defineProperty from \"/Users/kuzmycz/Documents/Software/Research/react/crwn-clothing/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nexport const addItemToCart = (cartItems, cartItemToAdd) => {\n  const existingCartItem = cartItems.find(cartItem => cartItem.id === cartItemToAdd.id);\n\n  if (existingCartItem) {\n    return cartItems.map(cartItem => cartItem.id === cartItemToAdd.id ? _objectSpread({}, cartItem, {\n      quantity: cartItem.quantity + 1\n    }) : cartItem);\n  }\n\n  return [...cartItems, _objectSpread({}, cartItemToAdd, {\n    quantity: 1\n  })];\n};\nexport const removeItemFromCart = (cartItems, itemToRemove) => {\n  const existingCartItem = cartItems.find(cartItem => cartItem.id === itemToRemove.id);\n\n  if (existingCartItem) {\n    const targetId = existingCartItem.id;\n\n    if (existingCartItem.quantity < 2) {\n      return cartItems.filter(item => item.id !== targetId);\n    } else {\n      return cartItems.map(item => item.id === targetId ? _objectSpread({}, item, {\n        quantity: item.quantity - 1\n      }) : item);\n    }\n  } else {\n    return cartItems;\n  }\n};","map":{"version":3,"sources":["/Users/kuzmycz/Documents/Software/Research/react/crwn-clothing/client/src/redux/cart/cart.utils.js"],"names":["addItemToCart","cartItems","cartItemToAdd","existingCartItem","find","cartItem","id","map","quantity","removeItemFromCart","itemToRemove","targetId","filter","item"],"mappings":";;;;;;AAAA,OAAO,MAAMA,aAAa,GAAG,CAACC,SAAD,EAAYC,aAAZ,KAA8B;AACvD,QAAMC,gBAAgB,GAAGF,SAAS,CAACG,IAAV,CACpBC,QAAD,IAAcA,QAAQ,CAACC,EAAT,KAAgBJ,aAAa,CAACI,EADvB,CAAzB;;AAIA,MAAIH,gBAAJ,EAAsB;AAClB,WAAOF,SAAS,CAACM,GAAV,CAAeF,QAAD,IACjBA,QAAQ,CAACC,EAAT,KAAgBJ,aAAa,CAACI,EAA9B,qBACOD,QADP;AACiBG,MAAAA,QAAQ,EAAGH,QAAQ,CAACG,QAAT,GAAoB;AADhD,SAEEH,QAHC,CAAP;AAKH;;AAED,SAAO,CAAE,GAAGJ,SAAL,oBAAoBC,aAApB;AAAmCM,IAAAA,QAAQ,EAAE;AAA7C,KAAP;AACH,CAdM;AAgBP,OAAO,MAAMC,kBAAkB,GAAG,CAACR,SAAD,EAAYS,YAAZ,KAA6B;AAC3D,QAAMP,gBAAgB,GAAGF,SAAS,CAACG,IAAV,CACpBC,QAAD,IAAcA,QAAQ,CAACC,EAAT,KAAgBI,YAAY,CAACJ,EADtB,CAAzB;;AAIA,MAAIH,gBAAJ,EAAsB;AAClB,UAAMQ,QAAQ,GAAGR,gBAAgB,CAACG,EAAlC;;AAEA,QAAIH,gBAAgB,CAACK,QAAjB,GAA4B,CAAhC,EAAmC;AAC/B,aAAOP,SAAS,CAACW,MAAV,CACDC,IAAF,IAAYA,IAAI,CAACP,EAAL,KAAYK,QADrB,CAAP;AAGH,KAJD,MAIO;AACH,aAAOV,SAAS,CAACM,GAAV,CACDM,IAAF,IAAYA,IAAI,CAACP,EAAL,KAAYK,QAAZ,qBACNE,IADM;AACAL,QAAAA,QAAQ,EAAGK,IAAI,CAACL,QAAL,GAAgB;AAD3B,WAEVK,IAHC,CAAP;AAKH;AACJ,GAdD,MAcO;AACH,WAAOZ,SAAP;AACH;AACJ,CAtBM","sourcesContent":["export const addItemToCart = (cartItems, cartItemToAdd) => {\n    const existingCartItem = cartItems.find( \n        (cartItem) => cartItem.id === cartItemToAdd.id\n    );\n\n    if (existingCartItem) {\n        return cartItems.map((cartItem) =>\n            cartItem.id === cartItemToAdd.id \n            ? { ...cartItem, quantity: (cartItem.quantity + 1) } \n            : cartItem\n            )\n    }\n\n    return [ ...cartItems, {...cartItemToAdd, quantity: 1} ];\n};\n\nexport const removeItemFromCart = (cartItems, itemToRemove) => {\n    const existingCartItem = cartItems.find( \n        (cartItem) => cartItem.id === itemToRemove.id\n    );\n\n    if (existingCartItem) {\n        const targetId = existingCartItem.id;\n\n        if (existingCartItem.quantity < 2) {\n            return cartItems.filter(\n                ( item ) => item.id !== targetId\n            );\n        } else {\n            return cartItems.map(\n                ( item ) => item.id === targetId \n                ? {...item, quantity: (item.quantity - 1)} \n                : item\n                );\n        }\n    } else {\n        return cartItems;\n    }\n};"]},"metadata":{},"sourceType":"module"}