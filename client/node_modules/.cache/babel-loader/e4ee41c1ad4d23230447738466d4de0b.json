{"ast":null,"code":"import _defineProperty from \"/Users/kuzmycz/Documents/Software/Research/react/crwn-clothing/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/kuzmycz/Documents/Software/Research/react/crwn-clothing/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/kuzmycz/Documents/Software/Research/react/crwn-clothing/client/src/components/sign-up/sign-up.component.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { signUpStart } from '../../redux/user/user.actions';\nimport { connect } from 'react-redux';\nimport './sign-up.styles.scss';\n\nconst SignUp = ({\n  signUpStart\n}) => {\n  const _useState = useState({\n    displayName: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        userCredentials = _useState2[0],\n        setUserCredentials = _useState2[1];\n\n  const email = userCredentials.email,\n        password = userCredentials.password,\n        confirmPassword = userCredentials.confirmPassword,\n        displayName = userCredentials.displayName;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    if (password !== confirmPassword) {\n      alert(\"passwords do not match\");\n      return;\n    }\n\n    signUpStart(displayName, email, password, confirmPassword);\n  };\n\n  const handleChange = event => {\n    const _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n    setUserCredentials(_objectSpread({}, userCredentials, {\n      [name]: value\n    }));\n  };\n\n  return React.createElement(\"div\", {\n    className: \"sign-up\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"I do not have an account\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"Sign up with your email and password\"), React.createElement(\"form\", {\n    className: \"sign-up-form\",\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(FormInput, {\n    type: \"text\",\n    name: \"displayName\",\n    value: displayName,\n    handleChange: handleChange,\n    label: \"Display Name\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"email\",\n    name: \"email\",\n    value: email,\n    handleChange: handleChange,\n    label: \"Email\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"password\",\n    name: \"password\",\n    value: password,\n    handleChange: handleChange,\n    label: \"Password\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"password\",\n    name: \"confirmPassword\",\n    value: confirmPassword,\n    handleChange: handleChange,\n    label: \"Confirm Password\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }), React.createElement(CustomButton, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"SIGN UP\")));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: (displayName, email, password) => dispatch(signUpStart(displayName, email, password))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["/Users/kuzmycz/Documents/Software/Research/react/crwn-clothing/client/src/components/sign-up/sign-up.component.jsx"],"names":["React","useState","FormInput","CustomButton","signUpStart","connect","SignUp","displayName","email","password","confirmPassword","userCredentials","setUserCredentials","handleSubmit","event","preventDefault","alert","handleChange","target","name","value","mapDispatchToProps","dispatch"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,SAAP,MAAsB,oCAAtB;AACA,OAAOC,YAAP,MAAyB,0CAAzB;AACA,SAASC,WAAT,QAA4B,+BAA5B;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAO,uBAAP;;AAGA,MAAMC,MAAM,GAAG,CAAC;AAAEF,EAAAA;AAAF,CAAD,KAAsB;AAAA,oBACaH,QAAQ,CAAC;AACnDM,IAAAA,WAAW,EAAE,EADsC;AAEnDC,IAAAA,KAAK,EAAE,EAF4C;AAGnDC,IAAAA,QAAQ,EAAE,EAHyC;AAInDC,IAAAA,eAAe,EAAE;AAJkC,GAAD,CADrB;AAAA;AAAA,QAC1BC,eAD0B;AAAA,QACTC,kBADS;;AAAA,QAO1BJ,KAP0B,GAOwBG,eAPxB,CAO1BH,KAP0B;AAAA,QAOnBC,QAPmB,GAOwBE,eAPxB,CAOnBF,QAPmB;AAAA,QAOTC,eAPS,GAOwBC,eAPxB,CAOTD,eAPS;AAAA,QAOQH,WAPR,GAOwBI,eAPxB,CAOQJ,WAPR;;AASjC,QAAMM,YAAY,GAAG,MAAOC,KAAP,IAAiB;AAClCA,IAAAA,KAAK,CAACC,cAAN;;AAEA,QAAGN,QAAQ,KAAKC,eAAhB,EAAiC;AAC7BM,MAAAA,KAAK,CAAC,wBAAD,CAAL;AACA;AACH;;AAEDZ,IAAAA,WAAW,CAACG,WAAD,EAAcC,KAAd,EAAqBC,QAArB,EAA+BC,eAA/B,CAAX;AACH,GATD;;AAWA,QAAMO,YAAY,GAAIH,KAAD,IAAW;AAAA,0BACJA,KAAK,CAACI,MADF;AAAA,UACpBC,IADoB,iBACpBA,IADoB;AAAA,UACdC,KADc,iBACdA,KADc;AAG5BR,IAAAA,kBAAkB,mBAAKD,eAAL;AAAsB,OAACQ,IAAD,GAAQC;AAA9B,OAAlB;AACH,GAJD;;AAMA,SACI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAI,IAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CAFJ,EAGI;AAAM,IAAA,SAAS,EAAC,cAAhB;AAA+B,IAAA,QAAQ,EAAEP,YAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,SAAD;AACQ,IAAA,IAAI,EAAC,MADb;AAEQ,IAAA,IAAI,EAAC,aAFb;AAGQ,IAAA,KAAK,EAAEN,WAHf;AAIQ,IAAA,YAAY,EAAEU,YAJtB;AAKQ,IAAA,KAAK,EAAC,cALd;AAMQ,IAAA,QAAQ,MANhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EASI,oBAAC,SAAD;AACI,IAAA,IAAI,EAAC,OADT;AAEI,IAAA,IAAI,EAAC,OAFT;AAGI,IAAA,KAAK,EAAET,KAHX;AAII,IAAA,YAAY,EAAES,YAJlB;AAKI,IAAA,KAAK,EAAC,OALV;AAMI,IAAA,QAAQ,MANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATJ,EAiBI,oBAAC,SAAD;AACI,IAAA,IAAI,EAAC,UADT;AAEI,IAAA,IAAI,EAAC,UAFT;AAGI,IAAA,KAAK,EAAER,QAHX;AAII,IAAA,YAAY,EAAEQ,YAJlB;AAKI,IAAA,KAAK,EAAC,UALV;AAMI,IAAA,QAAQ,MANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjBJ,EAyBI,oBAAC,SAAD;AACI,IAAA,IAAI,EAAC,UADT;AAEI,IAAA,IAAI,EAAC,iBAFT;AAGI,IAAA,KAAK,EAAEP,eAHX;AAII,IAAA,YAAY,EAAEO,YAJlB;AAKI,IAAA,KAAK,EAAC,kBALV;AAMI,IAAA,QAAQ,MANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAzBJ,EAiCI,oBAAC,YAAD;AAAc,IAAA,IAAI,EAAC,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAjCJ,CAHJ,CADJ;AAyCH,CAnED;;AAqEA,MAAMI,kBAAkB,GAAIC,QAAD,KAAe;AACtClB,EAAAA,WAAW,EAAE,CAACG,WAAD,EAAcC,KAAd,EAAqBC,QAArB,KAAkCa,QAAQ,CAAClB,WAAW,CAACG,WAAD,EAAcC,KAAd,EAAqBC,QAArB,CAAZ;AADjB,CAAf,CAA3B;;AAIA,eAAeJ,OAAO,CAAC,IAAD,EAAOgB,kBAAP,CAAP,CAAkCf,MAAlC,CAAf","sourcesContent":["import React, { useState } from 'react';\n\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { signUpStart } from '../../redux/user/user.actions';\nimport { connect } from 'react-redux';\n\nimport './sign-up.styles.scss';\n\n\nconst SignUp = ({ signUpStart }) =>  {\n    const [userCredentials, setUserCredentials] = useState({\n        displayName: '',\n        email: '',\n        password: '',\n        confirmPassword: ''\n    });\n    const {email, password, confirmPassword, displayName } = userCredentials;\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n\n        if(password !== confirmPassword) {\n            alert(\"passwords do not match\");\n            return;\n        }\n\n        signUpStart(displayName, email, password, confirmPassword);\n    };\n\n    const handleChange = (event) => {\n        const { name, value } = event.target;\n\n        setUserCredentials({...userCredentials, [name]: value });\n    }\n\n    return (\n        <div className='sign-up'>\n            <h2 className='title'>I do not have an account</h2>\n            <span>Sign up with your email and password</span> \n            <form className='sign-up-form' onSubmit={handleSubmit}>\n            <FormInput\n                    type='text'\n                    name='displayName'\n                    value={displayName}\n                    handleChange={handleChange}\n                    label='Display Name'\n                    required\n                    />\n                <FormInput\n                    type='email'\n                    name='email'\n                    value={email}\n                    handleChange={handleChange}\n                    label='Email'\n                    required\n                    />\n                <FormInput\n                    type='password'\n                    name='password'\n                    value={password}\n                    handleChange={handleChange}\n                    label='Password'\n                    required\n                    />\n                <FormInput\n                    type='password'\n                    name='confirmPassword'\n                    value={confirmPassword}\n                    handleChange={handleChange}\n                    label='Confirm Password'\n                    required\n                    />\n                <CustomButton type='submit'>SIGN UP</CustomButton>\n            </form>\n        </div>\n    );\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n    signUpStart: (displayName, email, password) => dispatch(signUpStart(displayName, email, password))\n})\n\nexport default connect(null, mapDispatchToProps)(SignUp);"]},"metadata":{},"sourceType":"module"}